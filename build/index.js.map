{"version":3,"sources":["../src/index.js"],"names":["config","require","console","error","mysql","dbname","Sequelize","db","sequelize","user","password","options","User","import","sync","force","then","log","dmu","name","Date","getTime","create","catch","err","Koa","app","use","ctx","next","start","ms","method","url","findOne","id","res","dataValues","body","listen","port"],"mappings":";AACA,a;;AAEA,IAAIA,SAASC,QAAQ,QAAR,CAAb;AACA;AACA;AACA;AACA;;AAEA;;AAEAC,QAAQC,KAAR,CAAcH,OAAOI,KAAP,CAAaC,MAA3B;AACA,IAAMC,YAAYL,QAAQ,WAAR,CAAlB;AACA,IAAMM,KAAK;AACPC,eAAW,IAAIF,SAAJ,CAAcN,OAAOI,KAAP,CAAaC,MAA3B,EAAmCL,OAAOI,KAAP,CAAaK,IAAhD,EAAsDT,OAAOI,KAAP,CAAaM,QAAnE,EAA6EV,OAAOI,KAAP,CAAaO,OAA1F,CADJ,EAAX;;;AAIAJ,GAAGK,IAAH,GAAUL,GAAGC,SAAH,CAAaK,MAAb,CAAoB,iBAApB,CAAV;;;AAGA;AACA;AACA;;AAEA;AACAN,GAAGC,SAAH,CAAaM,IAAb,CAAkB,EAAEC,OAAO,KAAT,EAAlB,EAAoCC,IAApC,CAAyC,YAAY;;AAEjDd,YAAQe,GAAR,CAAY,QAAZ;AACA,QAAIC,MAAM;AACNC,cAAM,OAAO,IAAIC,IAAJ,GAAWC,OAAX,EADP,EAAV;;AAGAd,OAAGK,IAAH,CAAQU,MAAR,CAAeJ,GAAf,EAAoBF,IAApB,CAAyB,UAAUP,IAAV,EAAgB;AACrCP,gBAAQe,GAAR,CAAY,UAAU,yBAAeC,GAAf,CAAtB;AACH,KAFD;AAGH,CATD,EASGK,KATH,CASS,UAAUC,GAAV,EAAe;AACpBtB,YAAQe,GAAR,CAAY,YAAZ,EAA0BO,GAA1B;AACH,CAXD;AAYA;;;;AAIA,IAAMC,MAAMxB,QAAQ,KAAR,CAAZ;AACA,IAAMyB,MAAM,IAAID,GAAJ,EAAZ;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAC,IAAIC,GAAJ,oFAAQ,iBAAOC,GAAP,EAAYC,IAAZ;AACEC,6BADF,GACU,IAAIV,IAAJ,EADV;AAEJ;AACMW,0BAHF,GAGO,IAAIX,IAAJ,KAAaU,KAHpB;AAIJ;AACA5B,gCAAQe,GAAR,CAAeW,IAAII,MAAnB,SAA6BJ,IAAIK,GAAjC,WAA0CF,EAA1C,SALI;AAMExB,+BAAGK,IAAH,CAAQsB,OAAR,CAAgB,EAAEC,IAAI,CAAN,EAAhB,EAA2BnB,IAA3B,CAAgC,UAAUoB,GAAV,EAAe;AACjDlC,wCAAQe,GAAR,CAAY,UAAU,yBAAemB,IAAIC,UAAnB,CAAtB;AACAT,oCAAIU,IAAJ,GAAW,yBAAeF,IAAIC,UAAnB,CAAX;AACH,6BAHK,EAGHd,KAHG,CAGG,eAAO;AACZK,oCAAIU,IAAJ,GAAWd,GAAX;AACH,6BALK,CANF,qEAAR;;;AAcAE,IAAIa,MAAJ,CAAWvC,OAAOwC,IAAlB","file":"index.js","sourcesContent":["\n'use strict'\n\nvar config = require('config');\n// var Sequelize = require('sequelize');\n// var db = {\n//     sequelize: new Sequelize(config.mysql.dbname, config.mysql.user, config.mysql.password, config.mysql.options)\n// }; \n\n// import Sequelize from 'sequelize'\n\nconsole.error(config.mysql.dbname)\nconst Sequelize = require('sequelize');\nconst db = {\n    sequelize: new Sequelize(config.mysql.dbname, config.mysql.user, config.mysql.password, config.mysql.options),\n}\n\ndb.User = db.sequelize.import('./model/user.js');\n\n\n// db.User.f().then(function (num) {\n//     console.log(num);\n// });\n\n// db.Role = db.import('./model/role.js');\ndb.sequelize.sync({ force: false }).then(function () {\n\n    console.log(\"服务启动成功\");\n    var dmu = {\n        name: '张三' + new Date().getTime()\n    };\n    db.User.create(dmu).then(function (user) {\n        console.log('添加用户：' + JSON.stringify(dmu));\n    });\n}).catch(function (err) {\n    console.log(\"服务启动失败: %s\", err);\n});\n// module.exports = db;\n\n\n\nconst Koa = require('koa');\nconst app = new Koa();\n// app.use(ctx => {\n//     db.User.findOne({ id: 2 }).then(function (res) {\n//         console.log('user:' + JSON.stringify(res.dataValues));\n//         ctx.body = JSON.stringify(res.dataValues);\n//     })\n\n// });\n\n// app.use((ctx, next) => {\n//     return db.User.findOne({ id: 2 }).then(function (res) {\n//         console.log('user:' + JSON.stringify(res.dataValues));\n//         ctx.body = JSON.stringify(res.dataValues);\n//     })\n// });\n\napp.use(async (ctx, next) => {\n    const start = new Date();\n    // await next();\n    const ms = new Date() - start;\n    // await next();\n    console.log(`${ctx.method} ${ctx.url} - ${ms}ms`);\n    await db.User.findOne({ id: 2 }).then(function (res) {\n        console.log('user:' + JSON.stringify(res.dataValues));\n        ctx.body = JSON.stringify(res.dataValues);\n    }).catch(err => {\n        ctx.body = err\n    })\n});\n\napp.listen(config.port);\n"]}